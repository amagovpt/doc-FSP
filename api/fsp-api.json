{
  "openapi": "3.0.1",
  "info": {
    "title": "Fatura Sem Papel - FSP API",
    "version": "v1"
  },
  "paths": {
    "/Cipher": {
      "get": {
        "tags": [
          "Cipher"
        ],
        "parameters": [
          {
            "name": "nif",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCipherDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invoice"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePendingResentDTOPageResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice/resend": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice/list": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "parameters": [
          {
            "name": "InvoiceState",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmissionDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Seller": {
      "delete": {
        "tags": [
          "Seller"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Seller"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SellerToUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SellerToUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SellerToUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SellerToUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Sw/auth": {
      "post": {
        "tags": [
          "Sw"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Sw/seller": {
      "post": {
        "tags": [
          "Sw"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SwSellerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwSellerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SwSellerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SwSellerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Token": {
      "put": {
        "tags": [
          "Token"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refresh_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenDTO": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorMessageDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "message": {
            "type": "string",
            "default": "Error message",
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "default": 401
          }
        },
        "additionalProperties": false
      },
      "GetCipherDTO": {
        "type": "object",
        "properties": {
          "instanceID": {
            "type": "string",
            "nullable": true
          },
          "cipher": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePendingResentDTOPageResult": {
        "type": "object",
        "additionalProperties": false
      },
      "InvoiceRequest": {
        "type": "object",
        "properties": {
          "localId": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "enterpriseNipc": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "type": "string",
            "nullable": true
          },
          "emissionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "collaboratorId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SellerToUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SwSellerRequest": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "enterpriseNipc": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please insert JWT token into field",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}